<!DOCTYPE html>
<html>
    <head>
        <link rel="stylesheet" href="/css/bootstrap.min.css" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/wickedpicker@0.4.3/dist/wickedpicker.min.css">
        <style>

            #medlog-card-container {
                width: 80%;
                margin-left: auto;
                margin-right: auto;
                gap: 2rem;
                display: grid;
                grid-template-columns: repeat(5,minmax(0,1fr));
            }

            .collapse-arrow {
                transform: rotate(90deg);
                position: absolute;
                top: 1.6rem;
                right: 8%;
                font-size: 1.6rem;
                color: darkgray;
                transition: transform 0.2s;
            }

            .arrow-expanded {
                transform: rotate(-90deg) translateY(-0.4rem);
            }

            .medlog-card {
                display: flex;
                margin: auto;
                margin-top: 0px;
            }

            @media (max-width: 1500px) {
                #medlog-card-container {
                    grid-template-columns: repeat(4, minmax(0, 1fr));
                }
            }

            @media (max-width: 1224px) {
                #medlog-card-container {
                    grid-template-columns: repeat(3, minmax(0, 1fr));
                }
            }

            @media (max-width: 915px) {
                #medlog-card-container {
                    grid-template-columns: repeat(2, minmax(0, 1fr));
                }
            }

            @media (max-width: 615px) {
                #medlog-card-container {
                    grid-template-columns: repeat(1, minmax(0, 1fr));
                }
            }

            .row-span-4 {
                grid-row: span 4/span 3
            }

            .card-title {
                font-size: 25px;
                min-height: 3rem;
            }

            .card-text {
                font-size: 17px;
            }

            .card {
                border: 0.1px solid darkgray;
                border-radius: 15px;
            }

        </style>
    </head>

    <body>
        <%- include('./blocks/header.ejs') %>

        <div class="container text-center mb-4">
            <h1 class="text-center mt-3" id="title">View Medication Logs</h1>
        </div>

        <div class="container w-25 mb-4">
            <label for="dog-select" class="col-form-label">Select dog:</label>
            <select class="form-select" id="dog-select">
                <option value="-1">-</option>
            </select>
            <div class="w-100 text-center mt-2">
                <button type="button" id="addMedLogButton" class="btn btn-primary btn-sm d-none" data-bs-toggle="modal" data-bs-target="#addMedLogModal" style="margin-left: auto; margin-right:auto;">+ Add Medication Log</button>
            </div>
        </div>

        <div class="container w-25 text-center mb-5">
            <h6>Filter by date</h6>
            <div class="row">
                <div class="col">
                    <input type="text" class="form-control" id="log-filter-startdate" placeholder="Start date"></input>
                </div>
                <div class="col">
                    <input type="text" class="form-control" id="log-filter-enddate" placeholder="End date"></input>
                </div>
            </div>
        </div>

        <div id="medlog-card-container">
        </div>

        <div class="modal fade" id="confirmDeletionModal">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm Deletion</h5>
                    </div>
                    <div class="modal-body">
                        <p id="deletionText"></p>
                        <div class="toast align-items-center text-white bg-danger border-0 w-100" role="alert"
                            aria-live="assertive" aria-atomic="true" id="deleteMedLogErrorToast">
                            <div class="d-flex">
                                <div class="toast-body">
                                    There was an error deleting the medication log.
                                </div>
                                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                                    aria-label="Close"></button>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger" onclick="deleteMedLog()">Delete</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="updateMedLogModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="updateMedLogModalTitle">Update medication log info</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="add-medlog-form">
                            <div class="mb-3">
                                <label for="medlog-medselect-update" class="col-form-label">* Select medication:</label>
                                <select class="form-select" style="width: 100%; margin-right: auto; margin-left: auto;" id="medlog-medselect-update">
                                    <option value="-1">-</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="medlog-volunteerselect-update" class="col-form-label">* Select Volunteer:</label>
                                <select class="form-select" style="width: 100%; margin-right: auto; margin-left: auto;" id="medlog-volunteerselect-update">
                                    <option value="-1">-</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="medlog-date-update" class="col-form-label">Date:</label>
                                <div class="input-group date">
                                    <input type="text" class="form-control" id="medlog-date-update" placeholder="Set to today if left blank"></input>
                                    <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="medlog-time-update" class="col-form-label">Time:</label>
                                <input type="text" class="form-control" id="medlog-time-update" placeholder="Set to current time if left blank">
                            </div>
                            <div class="mb-3">
                                <label for="medlog-amount-update" class="col-form-label" id="medlog-amount-update-label">* Amount:</label>
                                <input type="number" step="0.1" class="form-control" id="medlog-amount-update" placeholder="Up to 999.9"/>
                            </div>
                            <div class="mb-3">
                                <label for="medlog-note-update" class="col-form-label">Note:</label>
                                <textarea type="text" class="form-control" id="medlog-note-update"></textarea>
                            </div>
                        </form>
                        <div class="toast align-items-center text-white bg-danger border-0 w-100" role="alert"
                            aria-live="assertive" aria-atomic="true" id="updateMedLogErrorToast">
                            <div class="d-flex">
                                <div class="toast-body" id="update-error-message">
                                    There was an error updating the medication log.
                                </div>
                                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                                    aria-label="Close"></button>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Discard</button>
                        <button type="button" class="btn btn-primary" onclick="updateMedLog()">Confirm Update</button>
                    </div>
                </div>
        
            </div>
        
        </div>

        <div class="modal fade" id="addMedLogModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addMedLogModalTitle">Add a medlog</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="add-medlog-form">
                            <div class="mb-3">
                                <label for="medlog-medselect" class="col-form-label">* Select medication:</label>
                                <select class="form-select" style="width: 100%; margin-right: auto; margin-left: auto;" id="medlog-medselect">
                                    <option value="-1">-</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="medlog-volunteerselect" class="col-form-label">* Select Volunteer:</label>
                                <select class="form-select" style="width: 100%; margin-right: auto; margin-left: auto;" id="medlog-volunteerselect">
                                    <option value="-1">-</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="medlog-date" class="col-form-label">Date:</label>
                                <div class="input-group date">
                                    <input type="text" class="form-control" id="medlog-date" placeholder="Set to today if left blank"></input>
                                    <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="medlog-time" class="col-form-label">Time:</label>
                                <input type="text" class="form-control" id="medlog-time" placeholder="Set to current time if left blank">
                            </div>
                            <div class="mb-3">
                                <label for="medlog-amount" class="col-form-label" id="medlog-amount-label">* Amount:</label>
                                <input type="number" step="0.1" class="form-control" id="medlog-amount" placeholder="Up to 999.9"/>
                            </div>
                            <div class="mb-3">
                                <label for="medlog-note" class="col-form-label">Note:</label>
                                <textarea type="text" class="form-control" id="medlog-note"></textarea>
                            </div>
                        </form>
                        <div class="toast align-items-center text-white bg-danger border-0 w-100" role="alert"
                            aria-live="assertive" aria-atomic="true" id="addMedLogErrorToast">
                            <div class="d-flex">
                                <div class="toast-body" id="insertion-error-message">
                                    There was an error adding the medication log.
                                </div>
                                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
                                    aria-label="Close"></button>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onclick="addMedLog()">Add</button>
                    </div>
                </div>
        
            </div>
        
        </div>


        <script src="/js/General.js"></script>
        <script src="/js/MedLogF.js"></script>
        <script src="/js/bootstrap.bundle.min.js"></script>
        <script src="https://code.jquery.com/jquery-3.6.0.slim.min.js" integrity="sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI=" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
        <script src="/js/dselect.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/wickedpicker@0.4.3/dist/wickedpicker.min.js"></script>


        <script>

            var dogNameForID = {};
            var medForID = {};

            function retrieveLogsApplyFilters() {
                const data = {
                    DogID: $('#dog-select option:selected').val(),
                    StartDate: $('#log-filter-startdate').val(),
                    EndDate: $('#log-filter-enddate').val()
                }

                for (const k in data) {
                    if (data[k] != null && data[k].trim().length == 0)
                        delete data[k];
                }

                fetch('/ApplyMedLogFilter', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(responseJSON => {
                    console.log(responseJSON);
                    const cardContainer = document.getElementById('medlog-card-container');
                    $(cardContainer).empty();

                    for (const data of responseJSON) {
                        cardContainer.appendChild(MedLogF.createMedLogCard(data));
                    }
                })
            }

            fetch('/SearchDogByName', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                }
            })
            .then(response => response.json())
            .then(rowset => {
                const dogSelect = $("#dog-select");

                for(const dogData of rowset) {
                    dogSelect.append(General.htmlToElement(`<option value="${dogData.ID}">${dogData.Name}</option>`));
                    dogNameForID[dogData.ID] = dogData.Name;
                }

                dselect(document.getElementById('dog-select'), {
                    search: true
                });

                dogSelect.change((e) => {
                    onSelectDogID($(e.target).val());
                });

                setTimeout(loadMeds, 500);

                const addForID = urlParams.get('addForID');

                if(addForID) {
                    setDSelectToID(dogSelect, addForID);
                }
                //loadVolunteers();

            });

            function loadMeds() {
                fetch('/SearchMedByName', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                .then(response => response.json())
                .then(rowset => {
                    const medSelect = $("#medlog-medselect");
                    const medSelectUpdate = $('#medlog-medselect-update');

                    //console.log(rowset);

                    for(const medData of rowset) {
                        const elementHtml = `<option value="${medData.ID}">${medData.Name}</option>`;
                        medSelect.append(General.htmlToElement(elementHtml));
                        medSelectUpdate.append(General.htmlToElement(elementHtml));
                        medForID[medData.ID] = medData;
                    }

                    dselect(document.getElementById('medlog-medselect'), {
                        search: true
                    });

                    dselect(document.getElementById('medlog-medselect-update'), {
                        search: true
                    });

                    $('#medlog-medselect').change((e) => {

                        const medID = $(e.target).val();
                        const med = medForID[medID];
                        console.log(med);
                        if(med && med.UnitPerStock) {
                            $('#medlog-amount-label').text(`* Amount (${med.UnitPerStock}):`)
                        } else {
                            $('#medlog-amount-label').text(`* Amount:`)
                        }

                    });

                    $('#medlog-medselect-update').change((e) => {

                        const medID = $(e.target).val();
                        const med = medForID[medID];
                        if(med && med.UnitPerStock) {
                            $('#medlog-amount-update-label').text(`* Amount (${med.UnitPerStock}):`)
                        } else {
                            $('#medlog-amount-update-label').text(`* Amount:`)
                        }

                    });

                    // medSelect.change((e) => {
                    //     onSelectMedID($(e.target).val());
                    // });
                    //loadVolunteers();
                    setTimeout(loadVolunteers, 500);

                });
            }

            function loadVolunteers() {
                fetch('/FetchAllVolunteers_CanGiveMeds', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                .then(response => response.json())
                .then(rowset => {
                    const volunteerSelect = $("#medlog-volunteerselect");
                    const volunteerSelectUpdate = $('#medlog-volunteerselect-update');

                    //console.log(rowset);

                    for(const medLogData of rowset) {
                        const elementHtml = `<option value="${medLogData.ID}">${medLogData.Name}</option>`;
                        volunteerSelect.append(General.htmlToElement(elementHtml));
                        volunteerSelectUpdate.append(General.htmlToElement(elementHtml));
                    }

                    dselect(document.getElementById('medlog-volunteerselect'), {
                        search: true
                    });

                    dselect(document.getElementById('medlog-volunteerselect-update'), {
                        search: true
                    });

                });
            }

            $(document).ready(() => {

                $("#medlog-date").attr('autocomplete', 'off').datepicker({
                    todayBtn: "linked"
                });

                $('#medlog-date-update').attr('autocomplete', 'off').datepicker({
                    todayBtn: "linked"
                });

                $('#log-filter-startdate').datepicker().on('changeDate', retrieveLogsApplyFilters);
                $('#log-filter-enddate').datepicker().on('changeDate', retrieveLogsApplyFilters);

                $('#log-filter-startdate').on('input', retrieveLogsApplyFilters);
                $('#log-filter-enddate').on('input', retrieveLogsApplyFilters);

                General.initTimePicker('#medlog-time', 150);
                General.initTimePicker('#medlog-time-update', 150);

                addMedLogModal = bootstrap.Modal.getOrCreateInstance(document.getElementById("addMedLogModal"));
                urlParams = new URLSearchParams(window.location.search);

                if(urlParams.get('addForID')) {
                    addMedLogModal.show();
                }

            });

            function onSelectDogID(dogID) {
                const button = $('#addMedLogButton');
                if(dogID == -1) {
                    button.addClass('d-none');
                }
                else {
                    button.text(`+ Add medication log for ${dogNameForID[dogID]}`)
                    $('#addMedLogModalTitle').text(`Add medication log for ${dogNameForID[dogID]}`);
                    button.removeClass('d-none');
                }

                retrieveLogsApplyFilters();
                // MedLogF.searchMedLogsForDogID(dogID).then(rowset => {
                //     const medLogCardContainer = document.getElementById('medlog-card-container');
                //     $(medLogCardContainer).empty();

                //     for(const medLogData of rowset) {  
                //         medLogCardContainer.appendChild(MedLogF.createMedLogCard(medLogData));                    
                //     }
                // });
            }

        </script>

        <script>
            function retrieveMedLogInfo(medlogID) {
                MedLogF.getMedLogByID(medlogID).then(result => {
                    const medLogData = result[0];
                    document.getElementById('updateMedLogModal').setAttribute('targetMedLog', medlogID);
                    setDSelectToID($('#medlog-medselect-update'), medLogData.MedID);
                    setDSelectToID($('#medlog-volunteerselect-update'), medLogData.VolunteerID);
                    $("#medlog-date-update").val(medLogData.Date);
                    $('#medlog-time-update').val(medLogData.Time);
                    $('#medlog-amount-update').val(medLogData.Amount);
                    $('#medlog-note-update').val(medLogData.Note);
                });
            }
            function prepareDeletion(id) {
                document.getElementById('deletionText').innerText = 'You are about to delete medlog: ' + id;
                document.getElementById('confirmDeletionModal').setAttribute('targetMedLog', id);

            }
            
        </script>

        <script>
            function addMedLog() {
                const medLogData = {
                    dID: $("#dog-select option:selected").val(),
                    dName: null,
                    mID: $("#medlog-medselect option:selected").val(),
                    vID: $("#medlog-volunteerselect option:selected").val(),
                    vfn: null,
                    vln: null,
                    mName: null,
                    date: $("#medlog-date").val(),
                    time: $("#medlog-time").val(),
                    amount: $("#medlog-amount").val(),
                    Note: $("#medlog-note").val()
                }

                if(medLogData.mID == -1) {
                    handleInsertErrMsg('Please select a medication.');
                    return;
                }

                if(medLogData.vID == -1) {
                    handleInsertErrMsg('Please select a volunteer.');
                    return;
                }

                /*
                if(medLogData.date.trim().length == 0) {
                    handleInsertErrMsg('Please specify a date.');
                    return;
                }

                if(medLogData.time.trim().length == 0) {
                    handleInsertErrMsg('Please specify a time.');
                    return;
                }
                */

                if (medLogData.amount.trim().length == 0) {
                    handleInsertErrMsg('Please specify amount');
                    return;
                } else if (medLogData.amount <= 0 || isNaN(medLogData.amount)) {
                    handleInsertErrMsg('Invalid amount');
                    return;
                }

                for (const k in medLogData) {
                    if (!medLogData[k] && medLogData[k] !== false) {
                        delete medLogData[k];
                    }
                }

                //console.log(medLogData);

                fetch('/AddMedLog', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(medLogData)
                }).then(response => {

                    let modal = bootstrap.Modal.getOrCreateInstance($("#addMedLogModal"));
                    
                    if (response.status == 200) {
                        modal.hide();
                    }
                    return response.json();

                }).then(responseJSON => {
                    if ('errorMessage' in responseJSON) {
                        $('#insertion-error-message').text(responseJSON.errorMessage);
                        bootstrap.Toast.getOrCreateInstance($('#addMedLogErrorToast')).show();
                    } else {
                        const data = responseJSON[0];
                        //console.log(data);
                        $("#medlog-card-container").append(MedLogF.createMedLogCard(data));
                    }   
                });

            }
            function updateMedLog() {

                var ID = document.getElementById('updateMedLogModal').getAttribute('targetMedLog');
                //console.log(ID);

                const medLogData = {
                    MedLogID: ID, 
                    dID: $("#dog-select option:selected").val(),
                    dName: null,
                    mID: $("#medlog-medselect-update option:selected").val(),
                    vID: $("#medlog-volunteerselect-update option:selected").val(),
                    vfn: null,
                    vln: null,
                    mName: null,
                    date: $("#medlog-date-update").val(),
                    time: $("#medlog-time-update").val(),
                    amount: $("#medlog-amount-update").val(),
                    Note: $("#medlog-note-update").val()
                }

                if(medLogData.mID == -1) {
                    handleUpdateErrMsg('Please select a medication.');
                    return;
                }

                if(medLogData.vID == -1) {
                    handleUpdateErrMsg('Please select a volunteer.');
                    return;
                }

                /*

                if(medLogData.date.trim().length == 0) {
                    handleUpdateErrMsg('Please specify a date.');
                    return;
                }

                if(medLogData.time.trim().length == 0) {
                    handleUpdateErrMsg('Please specify a time.');
                    return;
                }
                */

                if (medLogData.amount.trim().length == 0) {
                    handleUpdateErrMsg('Please specify amount');
                    return;
                } else if (medLogData.amount <= 0 || isNaN(medLogData.amount)) {
                    handleInsertErrMsg('Invalid amount');
                    return;
                }


                for (const k in medLogData) {
                    if (!medLogData[k] && medLogData[k] !== false) {
                        delete medLogData[k];
                    }
                }

                fetch('/UpdateMedLog', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(medLogData)
                }).then(response => {
                    let modal = bootstrap.Modal.getOrCreateInstance(document.getElementById("updateMedLogModal"));

                    if (response.status == 200) {
                        modal.hide();
                        const medlogId = document.getElementById('updateMedLogModal').getAttribute('targetMedLog');
                        MedLogF.refreshMedLogCard(medlogId);
                    } 
                    
                    return response.json();

                }).then(responseJSON => {
                    if ('errorMessage' in responseJSON) {
                        // $('#update-error-message').text(responseJSON.errorMessage);
                        // bootstrap.Toast.getOrCreateInstance($('#updateMedLogErrorToast')).show();
                        handleUpdateErrMsg(responseJSON.errorMessage);
                    }
                });


                }
            function deleteMedLog() {
                var ID = document.getElementById('confirmDeletionModal').getAttribute('targetMedLog');

                const medLogData = {
                    MedLogID: ID
                }

                fetch('/DeleteMedLog', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(medLogData)
                }).then(response => {
                    let modal = bootstrap.Modal.getOrCreateInstance(document.getElementById("confirmDeletionModal"));
                    let errorToast = bootstrap.Toast.getOrCreateInstance(document.getElementById("deleteMedLogErrorToast"));

                    if (response.status == 200) {
                        modal.hide();
                    } else if (response.status == 400) {
                        errorToast.show();
                    }
                });
                //console.log(ID);
                document.getElementById('medlog-card-' + ID).remove();
            }

            function handleInsertErrMsg(errorMsg) {
                document.getElementById("insertion-error-message")
                    .innerText = errorMsg;
                bootstrap.Toast
                    .getOrCreateInstance(document.getElementById("addMedLogErrorToast"))
                    .show();
            }

            function handleUpdateErrMsg(errorMsg) {
                $('#update-error-message').text(errorMsg);
                bootstrap.Toast
                    .getOrCreateInstance($("#updateMedLogErrorToast"))
                    .show();
            }

        </script>

    </body>

</html>